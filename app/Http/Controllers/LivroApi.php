<?php

/**
 * Livraria Virtual
 * Manipulação de livros e suas dependências 
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class LivroApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation addLivro
     *
     * Adiciona um novo livro.
     *
     *
     * @return Http response
     */
    public function addLivro()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addLivro');
        }
        $body = $input['body'];


        return response('How about implementing addLivro as a post method ?');
    }
    /**
     * Operation getLivros
     *
     * Busca livros do armazenamento.
     *
     *
     * @return Http response
     */
    public function getLivros()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getLivros as a get method ?');
    }
    /**
     * Operation deleteLivro
     *
     * Remoção de um livro.
     *
     * @param float $isbn identificador do livro que será removido (required)
     *
     * @return Http response
     */
    public function deleteLivro($isbn)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteLivro as a delete method ?');
    }
    /**
     * Operation getLivroByIsbn
     *
     * Busca livro por isbn.
     *
     * @param int $isbn identificador do livro de retorno (required)
     *
     * @return Http response
     */
    public function getLivroByIsbn($isbn)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getLivroByIsbn as a get method ?');
    }
    /**
     * Operation updateLivro
     *
     * Atualização de um livro.
     *
     * @param float $isbn identificador do livro que será alterado (required)
     *
     * @return Http response
     */
    public function updateLivro($isbn)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateLivro as a put method ?');
    }
}
